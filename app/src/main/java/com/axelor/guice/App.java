/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.axelor.guice;

import com.axelor.module.AppModule;
import com.axelor.request.CircleRequest;
import com.axelor.request.CubeRequest;
import com.axelor.request.SquareRequest;
//import com.axelor.services.DrawShape;
import com.google.inject.Guice;
import com.google.inject.Injector;

public class App {
	
	private static final String square_req = "square";
	private static final String circle_req = "circle";
	private static final String cube_req = "cube";
	
	public static void sendRequest(String request)
	{
		if(request.equals(square_req)) {
			Injector injector = Guice.createInjector(new AppModule());//initialising an injector and supplying instance of AppModule class, which contains meta data about which type in bound to which class.
			//DrawShape d = injector.getInstance(DrawShape.class);//drawshape gives back its instance, drawsquare currently	
			SquareRequest square_request= injector.getInstance(SquareRequest.class);
			square_request.makeRequest();
			}
		
		if(request.equals(circle_req)) {
			Injector injector = Guice.createInjector(new AppModule());//initialising an injector and supplying instance of AppModule class, which contains meta data about which type in bound to which class.
			CircleRequest circle_request= injector.getInstance(CircleRequest.class);
			circle_request.makeRequest();
			}
		
		if(request.equals(cube_req)) {
			Injector injector = Guice.createInjector(new AppModule());//initialising an injector and supplying instance of AppModule class, which contains meta data about which type in bound to which class.
			CubeRequest cube_request= injector.getInstance(CubeRequest.class);
			cube_request.makeRequest();
		}
		}
		
    public static void main(String[] args) {
    	sendRequest(circle_req);
    	sendRequest(square_req);
    	sendRequest(cube_req);
    	
    	
    }
    
        
}
